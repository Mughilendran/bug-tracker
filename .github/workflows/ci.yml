name: CI

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:
  unit-tests-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache-dependency-path: bugtracker-backend/go.sum

      - name: Install go-junit reporter
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Run backend unit tests
        working-directory: ./bugtracker-backend
        run: |
          go test -json -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -func=coverage.out > coverage.txt

          echo "Coverage details:" >> ${GITHUB_STEP_SUMMARY}
          echo "```" >> ${GITHUB_STEP_SUMMARY}
          cat coverage.txt >> ${GITHUB_STEP_SUMMARY}
          echo "```" >> ${GITHUB_STEP_SUMMARY}
          go test -v ./... 2>&1 | go-junit-report > test-results.xml
        
      - name: Append coverage summary
        run: |
          echo "Coverage details:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat bugtracker-backend/coverage.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        
      - name: Debug coverage files
        run: |
            ls -la bugtracker-backend
            cat bugtracker-backend/coverage.txt || echo "coverage.txt not found"


      - name: Publish backend test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: backend-test-results
          path: bugtracker-backend/test-results.xml
          reporter: jest-junit


  unit-tests-frontend:
    runs-on: ubuntu-latest
    needs: unit-tests-backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: bugtracker-frontend/package-lock.json

      - name: Run frontend unit tests
        working-directory: ./bugtracker-frontend
        run: |
          npm ci
          npm test | tee fullOutput.txt

          echo "Test details:" >> ${GITHUB_STEP_SUMMARY}
          echo "```" >> ${GITHUB_STEP_SUMMARY}
          cat fullOutput.txt >> ${GITHUB_STEP_SUMMARY}
          echo "```" >> ${GITHUB_STEP_SUMMARY}

      - name: Publish frontend test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: frontend-test-results
          path: bugtracker-frontend/test-results.xml
          reporter: jest-junit